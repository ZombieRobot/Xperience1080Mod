<includes>
    <include file="ViewtypesVideos.xml" />
    <include file="ViewtypesMusic.xml" />
    <include file="ViewtypesPictures.xml" />
    <include file="ViewtypesPrograms.xml" />
    <include file="ViewtypesAddons.xml" />
    <include file="ViewtypesPVR.xml" />
	<include file="Viewtypes_Logo.xml" />
	<include file="Viewtypes_PanelBanner.xml" />
	<include file="Viewtypes_PosterWall.xml" />
	<include file="Viewtype_wall_banner.xml" />
	<include file="Viewtypes_HalfWall.xml" />
	
	
    <include name="VideoViews">
        <include>Viewtype-List</include>
        <include>Viewtype-InfoList</include>
        <include>Viewtype-Panel</include>
        <include>Viewtype-Landscape</include>
        <include>Viewtype-Poster</include>
        <include>Viewtype-Thumbnail</include>
        <include>Viewtype-ThumbnailVideo</include>
        <include>Viewtype-Banner</include>
		<include>Viewtype-Logo</include>				<!--id(514) -->
		<include>Viewtype-BannerPanelVideo</include>    <!--id(509) -->
		<include>Viewtype-WallVideo</include>           <!--id(502) -->
		<include>Viewtype_HalfWall</include>           <!--id(63) -->
		<include>Viewtype_Wall_Banner</include>           <!--id(68) -->
        <include condition="Skin.HasSetting(NextAired.Enabled)">NextAiredInfo</include>
    </include>
    
    <include name="MusicViews">
        <include>Viewtype-MusicList</include>
        <include>Viewtype-MusicInfoList</include>
        <include>Viewtype-MusicPanel</include>
        <include>Viewtype-CoverView</include>
        <include>Viewtype-Thumbnail</include>
        <include>Viewtype-MusicThumbnail</include>
        <include>Viewtype-CoverList</include>
    </include>
    
    <include name="MusicFileViews">
        <include>Viewtype-MusicList</include>
    </include>

    <include name="PictureViews">
        <include>Viewtype-PictureList</include>
        <include>Viewtype-PictureListLargeThumb</include>
        <include>Viewtype-PictureView</include>
        <include>Viewtype-AddonThumbnail</include>
    </include>

    <include name="ProgramViews">
        <include>Viewtype-ProgramList</include>
        <include>Viewtype-AddonThumbnail</include>
        <!-- Advanced Launcher specific views -->
        <include>Viewtype-ProgramInfoList</include>
        <include>Viewtype-ProgramInfoListSquare</include>
        <include>Viewtype-ProgramPanel</include>
        <include>Viewtype-ProgramPanelSquare</include>
        <include>Viewtype-ProgramLandscape</include>
        <include>Viewtype-ProgramPoster</include>
        <include>Viewtype-ProgramPosterSquare</include>
        <include>Viewtype-ProgramThumbnail</include>
        <include>Viewtype-ProgramThumbnailSquare</include>
        <include>Viewtype-ProgramBanner</include>
        <include>Viewtype-ProgramBannerSquare</include>
    </include>
    
    <include name="AddonViews">
        <include>Viewtype-AddonThumbnail</include>
        <include>Viewtype-AddonList</include>
    </include>
    
    <include name="VideoPlaylistViews">
        <include>Viewtype-List</include>
    </include>
    
    <include name="MusicPlaylistViews">
        <include>Viewtype-MusicList</include>
        <include>Viewtype-MusicInfoList</include>
        <include>Viewtype-CoverList</include>
        <include>Viewtype-CoverView</include>
    </include>
    
    <include name="PVRViews">
        <control type="group" id="50">
        	<include>Viewtype-TVChannelView</include> 
        	<include>Viewtype-RadioChannelView</include>
        	<include>Viewtype-EPGTimeline</include>
        	<include>Viewtype-TVGuideChannelView</include>
        	<include>Viewtype-TVGuideNowNext</include>
        	<include>Viewtype-TVRecordingsView</include>
        	<include>Viewtype-TVTimersView</include>
        	<include>Viewtype-TVSearch</include>
        </control>
    </include>
    
<!-- ========= -->  
<!-- Variables -->
<!-- ========= -->
    
    <!-- HD/SD flag -->
    <variable name="ListHDSDFlag">
        <value condition="SubString(ListItem.FileNameAndPath,.3D.) | SubString(ListItem.FileNameAndPath,-3D.)">flags/other/3d-default.png</value>
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,719)">flags/defs/hd.png</value>
        <value condition="!IsEmpty(ListItem.VideoResolution)">flags/defs/sd.png</value>
    </variable>
    
    <variable name="ListHDSDFlagSmall">
        <value condition="SubString(ListItem.FileNameAndPath,.3D.) | SubString(ListItem.FileNameAndPath,-3D.)">flags/other/3d-ilist.png</value>
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,719)">flags/defs/hd-ilist.png</value>
        <value condition="!IsEmpty(ListItem.VideoResolution)">flags/defs/sd-ilist.png</value>
    </variable>
    
    <variable name="BannerListHDSDFlag">
        <value condition="SubString(ListItem.FileNameAndPath,.3D.) | SubString(ListItem.FileNameAndPath,-3D.)">flags/other/3d-black.png</value>
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,719)">flags/defs/hd-black.png</value>
        <value condition="!IsEmpty(ListItem.VideoResolution)">flags/defs/sd-black.png</value>
    </variable>
    
    <variable name="LandscapeHDSD3DLabel">
        <value condition="SubString(ListItem.FileNameAndPath,.3D.) | SubString(ListItem.FileNameAndPath,-3D.)"> • 3D</value>
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,719)"> • HD</value>
        <value condition="!IsEmpty(ListItem.VideoResolution)"> • SD</value>
    </variable>
    
    <variable name="LandscapeHDSD3DLabel0">
        <value condition="SubString(Container(54).ListItem(0).FileNameAndPath,.3D.) | SubString(Container(54).ListItem(0).FileNameAndPath,-3D.)"> • 3D</value>
        <value condition="IntegerGreaterThan(Container(54).ListItem(0).VideoResolution,719)"> • HD</value>
        <value condition="!IsEmpty(Container(54).ListItem(0).VideoResolution)"> • SD</value>
    </variable>
    
    <variable name="LandscapeHDSD3DLabel1">
        <value condition="SubString(Container(54).ListItem(1).FileNameAndPath,.3D.) | SubString(Container(54).ListItem(1).FileNameAndPath,-3D.)"> • 3D</value>
        <value condition="IntegerGreaterThan(Container(54).ListItem(1).VideoResolution,719)"> • HD</value>
        <value condition="!IsEmpty(Container(54).ListItem(1).VideoResolution)"> • SD</value>
    </variable>
    
    <variable name="LandscapeHDSD3DLabel2">
        <value condition="SubString(Container(54).ListItem(2).FileNameAndPath,.3D.) | SubString(Container(54).ListItem(2).FileNameAndPath,-3D.)"> • 3D</value>
        <value condition="IntegerGreaterThan(Container(54).ListItem(2).VideoResolution,719)"> • HD</value>
        <value condition="!IsEmpty(Container(54).ListItem(2).VideoResolution)"> • SD</value>
    </variable>
    
    <variable name="LandscapeHDSD3DLabel3">
        <value condition="SubString(Container(54).ListItem(3).FileNameAndPath,.3D.) | SubString(Container(54).ListItem(3).FileNameAndPath,-3D.)"> • 3D</value>
        <value condition="IntegerGreaterThan(Container(54).ListItem(3).VideoResolution,719)"> • HD</value>
        <value condition="!IsEmpty(Container(54).ListItem(3).VideoResolution)"> • SD</value>
    </variable>
    
    <variable name="LandscapeHDSD3DLabel-1">
        <value condition="SubString(Container(54).ListItem(-1).FileNameAndPath,.3D.) | SubString(Container(54).ListItem(-1).FileNameAndPath,-3D.)"> • 3D</value>
        <value condition="IntegerGreaterThan(Container(54).ListItem(-1).VideoResolution,719)"> • HD</value>
        <value condition="!IsEmpty(Container(54).ListItem(-1).VideoResolution)"> • SD</value>
    </variable>
    
    <!-- Overlays -->
    <variable name="InfoListOverlay">
        <value condition="ListItem.IsResumable">$INFO[ListItem.Overlay,overlays/,/list-p.png]</value>
        <value>$INFO[ListItem.Overlay,overlays/,/list-w.png]</value>
    </variable>
    
    <variable name="InfoPanelOverlay">
        <value condition="ListItem.IsResumable">$INFO[ListItem.Overlay,overlays/,/panel-p.png]</value>
        <value condition="!IntegerGreaterThan(ListItem.PlayCount,0)">$INFO[ListItem.Overlay,overlays/,/panel-w.png]</value>
    </variable>
    
    <variable name="DefaultListOverlay">
        <value condition="Container.ListItem.IsResumable">$INFO[ListItem.Overlay,overlays/,/default-p.png]</value>
        <value>$INFO[ListItem.Overlay,overlays/,/default-w.png]</value>
    </variable>
    
    <variable name="ExtendedOverlay">
        <value condition="Container.ListItem.IsResumable">$INFO[ListItem.Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(ListItem.PlayCount,0)">$INFO[ListItem.Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="ExtendedOverlay0">
        <value condition="Container.ListItem(0).IsResumable">$INFO[Container.ListItem(0).Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(Container.ListItem(0).PlayCount,0)">$INFO[Container.ListItem(0).Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="ExtendedOverlay1">
        <value condition="Container.ListItem(1).IsResumable">$INFO[Container.ListItem(1).Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(Container.ListItem(1).PlayCount,0)">$INFO[Container.ListItem(1).Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="ExtendedOverlay2">
        <value condition="Container.ListItem(2).IsResumable">$INFO[Container.ListItem(2).Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(Container.ListItem(2).PlayCount,0)">$INFO[Container.ListItem(2).Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="ExtendedOverlay3">
        <value condition="Container.ListItem(3).IsResumable">$INFO[Container.ListItem(3).Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(Container.ListItem(3).PlayCount,0)">$INFO[Container.ListItem(3).Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="ExtendedOverlay4">
        <value condition="Container.ListItem(4).IsResumable">$INFO[Container.ListItem(4).Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(Container.ListItem(4).PlayCount,0)">$INFO[Container.ListItem(4).Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="ExtendedOverlay-1">
        <value condition="Container.ListItem(-1).IsResumable">$INFO[Container.ListItem(-1).Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(Container.ListItem(-1).PlayCount,0)">$INFO[Container.ListItem(-1).Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="VideoInfoOverlay">
        <value condition="IntegerGreaterThan(ListItem.PercentPlayed,0) + !IntegerGreaterThan(ListItem.PercentPlayed,99)">$INFO[ListItem.Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(ListItem.PlayCount,0)">$INFO[ListItem.Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="ActorsVideoInfoOverlay">
        <value condition="!IsEmpty(ListItem.Property(isResumable))">$INFO[ListItem.Overlay,overlays/,/extended-p.png]</value>
        <value>$INFO[ListItem.Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="BannerOverlayFo">
        <value condition="ListItem.IsPlaying">views/banner/other/playing-top.png</value>
        <value condition="ListItem.IsResumable">$INFO[ListItem.Overlay,overlays/,/banner-p-fo.png]</value>
        <value>$INFO[ListItem.Overlay,overlays/,/banner-w-fo.png]</value>
    </variable>
    
    <variable name="BannerOverlayNF">
        <value condition="Container.ListItem.IsResumable">$INFO[ListItem.Overlay,overlays/,/banner-p-nf.png]</value>
        <value>$INFO[ListItem.Overlay,overlays/,/banner-w-nf.png]</value>
    </variable>
    
    <variable name="AddonOverlay">
        <value condition="stringcompare(ListItem.Label2,$LOCALIZE[24098])">overlays/addons/broken.png</value>
        <value condition="stringcompare(ListItem.Label2,$LOCALIZE[305])">overlays/addons/enabled.png</value>
    </variable>

    <!-- Thumbnails -->
    <variable name="DefaultListPoster">
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!substring(Container.FolderPath,videodb://,left) + !IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/small.png]</value>
    </variable>
    
    <variable name="DefaultListBanner">
        <value condition="!IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/banner-small.png]</value>
    </variable>
    
    <variable name="DefaultListLandscape">
        <value condition="!IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/landscape-small.png]</value>
    </variable>
    
    <variable name="DefaultBanner">
        <value condition="!IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/banner.png]</value>
    </variable>
     
    <variable name="ListFanart">
        <value condition="[Container.Content(Seasons) | Container.Content(Episodes)] + !IsEmpty(ListItem.Art(season.fanart))">$INFO[ListItem.Art(season.fanart)]</value>
        <value>$INFO[ListItem.Art(fanart)]</value>
    </variable>
    
    <variable name="InfoListPoster">
        <value condition="Container.Content(Episodes) + !IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!substring(Container.FolderPath,videodb://,left) + !IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
       
    <variable name="PosterViewPoster">
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="PosterViewPoster-1">
        <value condition="!IsEmpty(Container(55).ListItem(-1).Art(poster))">$INFO[Container(55).ListItem(-1).Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(Container(55).ListItem(-1).Art(thumb))">$INFO[Container(55).ListItem(-1).Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(Container(55).ListItem(-1).Art(tvshow.poster))">$INFO[Container(55).ListItem(-1).Art(tvshow.poster)]</value>
        <value>$INFO[Container(55).ListItem(-1).ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="PosterViewPoster0">
        <value condition="!IsEmpty(Container(55).ListItem(0).Art(poster))">$INFO[Container(55).ListItem(0).Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(Container(55).ListItem(0).Art(thumb))">$INFO[Container(55).ListItem(0).Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(Container(55).ListItem(0).Art(tvshow.poster))">$INFO[Container(55).ListItem(0).Art(tvshow.poster)]</value>
        <value>$INFO[Container(55).ListItem(0).ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="PosterViewPoster1">
        <value condition="!IsEmpty(Container(55).ListItem(1).Art(poster))">$INFO[Container(55).ListItem(1).Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(Container(55).ListItem(1).Art(thumb))">$INFO[Container(55).ListItem(1).Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(Container(55).ListItem(1).Art(tvshow.poster))">$INFO[Container(55).ListItem(1).Art(tvshow.poster)]</value>
        <value>$INFO[Container(55).ListItem(1).ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="PosterViewPoster2">
        <value condition="!IsEmpty(Container(55).ListItem(2).Art(poster))">$INFO[Container(55).ListItem(2).Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(Container(55).ListItem(2).Art(thumb))">$INFO[Container(55).ListItem(2).Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(Container(55).ListItem(2).Art(tvshow.poster))">$INFO[Container(55).ListItem(2).Art(tvshow.poster)]</value>
        <value>$INFO[Container(55).ListItem(2).ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="PosterViewPoster3">
        <value condition="!IsEmpty(Container(55).ListItem(3).Art(poster))">$INFO[Container(55).ListItem(3).Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(Container(55).ListItem(3).Art(thumb))">$INFO[Container(55).ListItem(3).Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(Container(55).ListItem(3).Art(tvshow.poster))">$INFO[Container(55).ListItem(3).Art(tvshow.poster)]</value>
        <value>$INFO[Container(55).ListItem(3).ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="PosterViewPoster4">
        <value condition="!IsEmpty(Container(55).ListItem(4).Art(poster))">$INFO[Container(55).ListItem(4).Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(Container(55).ListItem(4).Art(thumb))">$INFO[Container(55).ListItem(4).Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(Container(55).ListItem(4).Art(tvshow.poster))">$INFO[Container(55).ListItem(4).Art(tvshow.poster)]</value>
        <value>$INFO[Container(55).ListItem(4).ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="PosterViewPoster5">
        <value condition="!IsEmpty(Container(55).ListItem(5).Art(poster))">$INFO[Container(55).ListItem(5).Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(Container(55).ListItem(5).Art(thumb))">$INFO[Container(55).ListItem(5).Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(Container(55).ListItem(5).Art(tvshow.poster))">$INFO[Container(55).ListItem(5).Art(tvshow.poster)]</value>
        <value>$INFO[Container(55).ListItem(5).ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="ExtendedViewThumb">
        <value condition="Container.Content(episodes)">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!IsEmpty(ListItem.Art(landscape)) + [[Container.Content(TVShows) + [Skin.HasSetting(ExtendedUseLandscape) | Skin.HasSetting(ExtendedUseClearArt) | Skin.HasSetting(ExtendedUseClearLogo)]] | [Container.Content(Movies) + [Skin.HasSetting(ExtendedUseMovieLandscape) | Skin.HasSetting(ExtendedUseMovieClearArt) | Skin.HasSetting(ExtendedUseClearMovieLogo)]]]">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>    
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/landscape.png]</value>
    </variable>
    
    <variable name="ExtendedViewThumb0">
        <value condition="Container.Content(episodes)">$INFO[Container(54).ListItem(0).Art(thumb)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(0).Art(landscape)) + [[Container.Content(TVShows) + [Skin.HasSetting(ExtendedUseLandscape) | Skin.HasSetting(ExtendedUseClearArt) | Skin.HasSetting(ExtendedUseClearLogo)]] | [Container.Content(Movies) + [Skin.HasSetting(ExtendedUseMovieLandscape) | Skin.HasSetting(ExtendedUseMovieClearArt) | Skin.HasSetting(ExtendedUseClearMovieLogo)]]]">$INFO[Container(54).ListItem(0).Art(landscape)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(0).Art(fanart))">$INFO[Container(54).ListItem(0).Art(fanart)]</value>    
        <value>$INFO[Container(54).ListItem(0).ActualIcon,views/fallbacks/,/landscape.png]</value>
    </variable>
    
    <variable name="ExtendedViewThumb1">
        <value condition="Container.Content(episodes)">$INFO[Container(54).ListItem(1).Art(thumb)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(1).Art(landscape)) + [[Container.Content(TVShows) + [Skin.HasSetting(ExtendedUseLandscape) | Skin.HasSetting(ExtendedUseClearArt) | Skin.HasSetting(ExtendedUseClearLogo)]] | [Container.Content(Movies) + [Skin.HasSetting(ExtendedUseMovieLandscape) | Skin.HasSetting(ExtendedUseMovieClearArt) | Skin.HasSetting(ExtendedUseClearMovieLogo)]]]">$INFO[Container(54).ListItem(1).Art(landscape)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(1).Art(fanart))">$INFO[Container(54).ListItem(1).Art(fanart)]</value>    
        <value>$INFO[Container(54).ListItem(1).ActualIcon,views/fallbacks/,/landscape.png]</value>
    </variable>
    
    <variable name="ExtendedViewThumb2">
        <value condition="Container.Content(episodes)">$INFO[Container(54).ListItem(2).Art(thumb)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(2).Art(landscape)) + [[Container.Content(TVShows) + [Skin.HasSetting(ExtendedUseLandscape) | Skin.HasSetting(ExtendedUseClearArt) | Skin.HasSetting(ExtendedUseClearLogo)]] | [Container.Content(Movies) + [Skin.HasSetting(ExtendedUseMovieLandscape) | Skin.HasSetting(ExtendedUseMovieClearArt) | Skin.HasSetting(ExtendedUseClearMovieLogo)]]]">$INFO[Container(54).ListItem(2).Art(landscape)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(2).Art(fanart))">$INFO[Container(54).ListItem(2).Art(fanart)]</value>    
        <value>$INFO[Container(54).ListItem(2).ActualIcon,views/fallbacks/,/landscape.png]</value>
    </variable>
    
    <variable name="ExtendedViewThumb3">
        <value condition="Container.Content(episodes)">$INFO[Container(54).ListItem(3).Art(thumb)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(3).Art(landscape)) + [[Container.Content(TVShows) + [Skin.HasSetting(ExtendedUseLandscape) | Skin.HasSetting(ExtendedUseClearArt) | Skin.HasSetting(ExtendedUseClearLogo)]] | [Container.Content(Movies) + [Skin.HasSetting(ExtendedUseMovieLandscape) | Skin.HasSetting(ExtendedUseMovieClearArt) | Skin.HasSetting(ExtendedUseClearMovieLogo)]]]">$INFO[Container(54).ListItem(3).Art(landscape)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(3).Art(fanart))">$INFO[Container(54).ListItem(3).Art(fanart)]</value>    
        <value>$INFO[Container(54).ListItem(3).ActualIcon,views/fallbacks/,/landscape.png]</value>
    </variable>
    
    <variable name="ExtendedViewThumb-1">
        <value condition="Container.Content(episodes)">$INFO[Container(54).ListItem(-1).Art(thumb)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(-1).Art(landscape)) + [[Container.Content(TVShows) + [Skin.HasSetting(ExtendedUseLandscape) | Skin.HasSetting(ExtendedUseClearArt) | Skin.HasSetting(ExtendedUseClearLogo)]] | [Container.Content(Movies) + [Skin.HasSetting(ExtendedUseMovieLandscape) | Skin.HasSetting(ExtendedUseMovieClearArt) | Skin.HasSetting(ExtendedUseClearMovieLogo)]]]">$INFO[Container(54).ListItem(-1).Art(landscape)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(-1).Art(fanart))">$INFO[Container(54).ListItem(-1).Art(fanart)]</value>    
        <value>$INFO[Container(54).ListItem(-1).ActualIcon,views/fallbacks/,/landscape.png]</value>
    </variable>
    
    <variable name="ExtendedViewLogo">
        <value condition="[!IsEmpty(ListItem.Art(clearlogo)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearLogo)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieLogo)]]] | [IsEmpty(ListItem.Art(clearart)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearArt)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieArt)]]]">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!IsEmpty(ListItem.Art(clearart)) + [Skin.HasSetting(ExtendedUseClearArt) | Skin.HasSetting(ExtendedUseClearLogo)]">$INFO[ListItem.Art(clearart)]</value>
    </variable>
    
    <variable name="ExtendedViewLogo0">
        <value condition="[!IsEmpty(Container(54).ListItem(0).Art(clearlogo)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearLogo)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieLogo)]]] | [IsEmpty(Container(54).ListItem(0).Art(clearart)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearArt)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieArt)]]]">$INFO[Container(54).ListItem(0).Art(clearlogo)]</value>
        <value>$INFO[Container(54).ListItem(0).Art(clearart)]</value>
    </variable>
    
    <variable name="ExtendedViewLogo1">
        <value condition="[!IsEmpty(Container(54).ListItem(1).Art(clearlogo)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearLogo)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieLogo)]]] | [IsEmpty(Container(54).ListItem(1).Art(clearart)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearArt)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieArt)]]]">$INFO[Container(54).ListItem(1).Art(clearlogo)]</value>
        <value>$INFO[Container(54).ListItem(1).Art(clearart)]</value>
    </variable>
    
    <variable name="ExtendedViewLogo2">
        <value condition="[!IsEmpty(Container(54).ListItem(2).Art(clearlogo)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearLogo)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieLogo)]]] | [IsEmpty(Container(54).ListItem(2).Art(clearart)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearArt)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieArt)]]]">$INFO[Container(54).ListItem(2).Art(clearlogo)]</value>
        <value>$INFO[Container(54).ListItem(2).Art(clearart)]</value>
    </variable>
    
    <variable name="ExtendedViewLogo3">
        <value condition="[!IsEmpty(Container(54).ListItem(3).Art(clearlogo)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearLogo)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieLogo)]]] | [IsEmpty(Container(54).ListItem(3).Art(clearart)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearArt)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieArt)]]]">$INFO[Container(54).ListItem(3).Art(clearlogo)]</value>
        <value>$INFO[Container(54).ListItem(3).Art(clearart)]</value>
    </variable>
    
    <variable name="ExtendedViewLogo-1">
        <value condition="[!IsEmpty(Container(54).ListItem(-1).Art(clearlogo)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearLogo)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieLogo)]]] | [IsEmpty(Container(54).ListItem(-1).Art(clearart)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearArt)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieArt)]]]">$INFO[Container(54).ListItem(-1).Art(clearlogo)]</value>
        <value>$INFO[Container(54).ListItem(-1).Art(clearart)]</value>
    </variable>
    
	<variable name="value_logoandclearart">
		<value condition="Skin.HasSetting(nopreferclearart) + !IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="Skin.HasSetting(nopreferclearart) + IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearart)]</value>
		<value condition="!Skin.HasSetting(nopreferclearart) + !IsEmpty(ListItem.Art(clearart))">$INFO[ListItem.Art(clearart)]</value>
		<value condition="!Skin.HasSetting(nopreferclearart) + IsEmpty(ListItem.Art(clearart))">$INFO[ListItem.Art(clearlogo)]</value>
	</variable>
	
    <variable name="ExtendedViewLogo">
        <value condition="[!IsEmpty(ListItem.Art(clearlogo)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearLogo)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieLogo)]]] | [IsEmpty(ListItem.Art(clearart)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearArt)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieArt)]]]">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!IsEmpty(ListItem.Art(clearart)) + [Skin.HasSetting(ExtendedUseClearArt) | Skin.HasSetting(ExtendedUseClearLogo)]">$INFO[ListItem.Art(clearart)]</value>
    </variable>
    <variable name="WallPoster">
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/medium.png]</value>
    </variable>

    <variable name="VideoInfoThumb">
        <value condition="Container.Content(Episodes) + !IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="Container.Content(tvshows)">views/fallbacks/DefaultFolder.png/large.png</value>
        <value>views/fallbacks/DefaultVideo.png/large.png</value>
    </variable>
    
    <variable name="VideoInfoArt">
        <value condition="!IsEmpty(ListItem.Art(season.fanart)) + !Container.Content(episodes)">$INFO[ListItem.Art(season.fanart)]</value>
        <value condition="!IsEmpty(ListItem.Art(fanart)) + !Container.Content(episodes)">$INFO[ListItem.Art(fanart)]</value>
        <value condition="[Container.Content(episodes) | [IsEmpty(ListItem.Art(season.fanart)) + IsEmpty(ListItem.Art(fanart))]] + !IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="Container.Content(tvshows)">views/fallbacks/DefaultFolder.png/landscape.png</value>
        <value>views/fallbacks/DefaultVideo.png/landscape.png</value>
    </variable>
    
    <variable name="BannerLandscape">
        <value condition="!IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/landscape.png]</value>
    </variable>
    
    <variable name="ThumbIcon">
        <value condition="!IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/square-medium.png]</value>
    </variable>
    
    <variable name="SquareThumbSmall">
        <value condition="!IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/square-small.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge">
        <value condition="!IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge-1">
        <value condition="!IsEmpty(Container(55).ListItem(-1).Art(thumb))">$INFO[Container(55).ListItem(-1).Art(thumb)]</value>
        <value>$INFO[Container(55).ListItem(-1).ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge0">
        <value condition="!IsEmpty(Container(55).ListItem(0).Art(thumb))">$INFO[Container(55).ListItem(0).Art(thumb)]</value>
        <value>$INFO[Container(55).ListItem(0).ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge1">
        <value condition="!IsEmpty(Container(55).ListItem(1).Art(thumb))">$INFO[Container(55).ListItem(1).Art(thumb)]</value>
        <value>$INFO[Container(55).ListItem(1).ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge2">
        <value condition="!IsEmpty(Container(55).ListItem(2).Art(thumb))">$INFO[Container(55).ListItem(2).Art(thumb)]</value>
        <value>$INFO[Container(55).ListItem(2).ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge3">
        <value condition="!IsEmpty(Container(55).ListItem(3).Art(thumb))">$INFO[Container(55).ListItem(3).Art(thumb)]</value>
        <value>$INFO[Container(55).ListItem(3).ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge4">
        <value condition="!IsEmpty(Container(55).ListItem(4).Art(thumb))">$INFO[Container(55).ListItem(4).Art(thumb)]</value>
        <value>$INFO[Container(55).ListItem(4).ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge5">
        <value condition="!IsEmpty(Container(55).ListItem(5).Art(thumb))">$INFO[Container(55).ListItem(5).Art(thumb)]</value>
        <value>$INFO[Container(55).ListItem(5).ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="AlbumInfoThumb">
        <value condition="!IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
        <value condition="Container.Content(Artists)">views/fallbacks/DefaultArtist.png/square-large.png</value>
        <value>views/fallbacks/DefaultAlbumCover.png/square-large.png</value>
    </variable>
    
    <variable name="AddonInfoThumb">
        <value condition="!IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
        <value>views/fallbacks/DefaultAddon.png/square-large.png</value>
    </variable>
    
    <variable name="PvrListIcon">
        <value condition="ListItem.IsEncrypted + IsEmpty(ListItem.Thumb)">windows/pvr/encrypted.png</value>
        <value>$INFO[ListItem.Thumb]</value>
    </variable>
    
    <!-- Info -->
    <variable name="ListItem.Label">
        <value condition="ListItem.IsPlaying">[COLOR=SelectedGreen]$INFO[ListItem.Label][/COLOR]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>
    
    <variable name="ListItem.Title">
        <value condition="ListItem.IsPlaying">[COLOR=SelectedGreen]$INFO[ListItem.Title][/COLOR]</value>
        <value>$INFO[ListItem.Title]</value>
    </variable>
    
    <variable name="ListItem.ChannelNumber">
        <value condition="ListItem.IsPlaying">[COLOR=SelectedGreen]$INFO[ListItem.ChannelNumber][/COLOR]</value>
        <value>$INFO[ListItem.ChannelNumber]</value>
    </variable>
    
    <variable name="ListItem.StartDate">
        <value condition="ListItem.IsPlaying">[COLOR=SelectedGreen]$INFO[ListItem.StartDate][/COLOR]</value>
        <value>$INFO[ListItem.StartDate]</value>
    </variable>
    
    <variable name="Colordiffuse.Color">
        <value condition="ListItem.IsPlaying">D4FFFFFF</value>
        <value>99FFFFFF</value>
    </variable>
    
    <variable name="Colordiffuse.Color.2">
        <value condition="ListItem.IsPlaying">D4FFFFFF</value>
        <value>77white</value>
    </variable>
    
    <variable name="Colordiffuse.Color.3">
        <value condition="ListItem.IsPlaying">FFFFFFFF</value>
        <value>7FFFFFFF</value>
    </variable>
    
    <variable name="SelectedColor.Open">
        <value condition="ListItem.IsPlaying">[COLOR=SelectedGreen]</value>
    </variable>
    
    <variable name="SelectedColor.Close">
        <value condition="ListItem.IsPlaying">[/COLOR]</value>
    </variable>
    
    <variable name="CoverViewBottomInfo">
        <value condition="Container.Content(Artists)">$INFO[Container(55).ListItem.Artist]</value>
        <value condition="Container.Content(Songs) | Window.IsVisible(MusicPlaylist)">$INFO[Container(55).ListItem.Title]$INFO[ListItem.Duration, (,)]</value>
        <value>$INFO[Container(55).ListItem.Label]</value>
    </variable>
    
    <variable name="CoverViewBottomInfo2">
        <value condition="Container.Content(Albums)">$INFO[Container(55).ListItem.Year]$INFO[Container(55).ListItem.Genre, • ,]</value>
        <value condition="Container.Content(Songs) | Window.IsVisible(MusicPlaylist)">$INFO[Container(55).ListItem.Artist]</value>
        <value>$INFO[Container(55).ListItem.Label2]</value>
    </variable>
    
    <variable name="BannerListInfoGenreTotalSeasons">
        <value condition="Container.Content(Seasons)">$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]</value>
        <value>$INFO[ListItem.Genre]</value>
    </variable>
    
    <variable name="AlbumInfoTracks">
        <value condition="!IntegerGreaterThan(ListItem.TrackNumber,9)">$INFO[ListItem.TrackNumber,0,. ]$INFO[ListItem.Label]$INFO[ListItem.Duration, (,)]</value>
        <value>$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$INFO[ListItem.Duration, (,)]</value>
    </variable>
    
    <variable name="ArtistInfoDiscography">
        <value condition="!IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2,, ]$INFO[ListItem.Label]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>
    
    <variable name="MusicListLabel">
        <value condition="!IsEmpty(ListItem.Title)">$VAR[SelectedColor.Open]$INFO[ListItem.Title]$VAR[SelectedColor.Close]</value>
        <value>$VAR[SelectedColor.Open]$INFO[ListItem.Label]$VAR[SelectedColor.Close]</value>
    </variable>
    
    <variable name="MusicListStar">
        <value condition="ListItem.IsPlaying">views/thumb/other/star_pl.png</value>
        <value>views/thumb/other/star_nofo.png</value>
    </variable>
    
    <variable name="MusicListStarFo">
        <value condition="ListItem.IsPlaying">views/thumb/other/star_pl.png</value>
        <value>views/thumb/other/star_fo.png</value>
    </variable>
    
    <variable name="MusicListSongLabel">
        <value condition="stringcompare(Container.FolderPath,musicdb://5/1/)">$VAR[SelectedColor.Open]$INFO[ListItem.Title]$VAR[SelectedColor.Close]</value>
        <value condition="!IsEmpty(ListItem.Title) + !IntegerGreaterThan(ListItem.TrackNumber,9)">$VAR[SelectedColor.Open]$INFO[ListItem.TrackNumber,0,. ]$INFO[ListItem.Title]$VAR[SelectedColor.Close]</value>
        <value condition="!IsEmpty(ListItem.Title)">$VAR[SelectedColor.Open]$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]$VAR[SelectedColor.Close]</value>
        <value>$VAR[SelectedColor.Open]$INFO[ListItem.Label]$VAR[SelectedColor.Close]</value>
    </variable>
    
    <variable name="MusicListSongLabel2">
        <value condition="stringcompare(Container.SortMethod,$LOCALIZE[567]) | stringcompare(Container.SortMethod,$LOCALIZE[576])">$INFO[ListItem.PlayCount, [,] ]$INFO[ListItem.Duration]</value>
        <value condition="stringcompare(Container.SortMethod,$LOCALIZE[562])">$INFO[ListItem.Year, [,] ]$INFO[ListItem.Duration]</value>
        <value condiiton="!IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration, ,]</value>
    </variable>

    <variable name="MusicInfoListDescriptionHeader">
        <value condition="Container.Content(artists)">$LOCALIZE[21887]</value>
        <value>$LOCALIZE[183]</value>
    </variable>
    
    <variable name="MusicInfoListDescription">
        <value condition="Container.Content(artists)">$INFO[ListItem.Property(Artist_Description)]</value>
        <value>$INFO[ListItem.Property(Album_Description)]</value>
    </variable>
    
    <variable name="MusicInfoListInfo">
        <value condition="Container.Content(Artists)">$INFO[ListItem.Property(Artist_Genre)]</value>
        <value>$INFO[ListItem.Artist]</value>
    </variable>
    
    <variable name="MusicInfoListSubInfo">
        <value condition="Container.Content(Artists)">$INFO[ListItem.Property(Artist_Style)]</value>
        <value>$INFO[ListItem.Genre]</value>
    </variable>
    
    <variable name="MusicInfoListSongLabel">
        <value condition="!IsEmpty(ListItem.Title) + !IntegerGreaterThan(ListItem.TrackNumber,9)">$INFO[ListItem.TrackNumber,0,. ]$INFO[ListItem.Title]</value>
        <value condition="!IsEmpty(ListItem.Title)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>
    
    <variable name="MusicInfoListSongLabel2">
        <value condition="stringcompare(Container.SortMethod,$LOCALIZE[567]) | stringcompare(Container.SortMethod,$LOCALIZE[576])">$INFO[ListItem.PlayCount, [,] ]$INFO[ListItem.Duration]</value>
        <value condition="stringcompare(Container.SortMethod,$LOCALIZE[562])">$INFO[ListItem.Year, [,] ]$INFO[ListItem.Duration]</value>
        <value condition="stringcompare(Container.SortMethod,$LOCALIZE[563])">$INFO[ListItem.Rating, [,★] ]$INFO[ListItem.Duration]</value>
        <value condiiton="!IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration, ,]</value>
    </variable>
    
    <variable name="MusicPanelInfo">
        <value condition="Container.Content(Artists)">$INFO[ListItem.Artist]</value>
        <value>$INFO[ListItem.Album]</value>
    </variable>
    
    <variable name="MusicPanelSubInfo">
        <value condition="Container.Content(Artists)">$INFO[ListItem.Property(Artist_Genre)]</value>
        <value>$INFO[ListItem.Year]$INFO[ListItem.Genre, • ,]</value>
    </variable>
    
    <variable name="MusicThumbnailInfo">
        <value condition="Container.Content(Artists)">$INFO[ListItem.Artist]</value>
        <value>$INFO[ListItem.Artist]</value>
    </variable>
    
    <variable name="VideoPanelThumbInfo">
        <value condition="Container.Content(movies)">$INFO[ListItem.Year]$INFO[ListItem.Duration, • , $LOCALIZE[12391]]$INFO[ListItem.Rating, • ★ ,]$VAR[LandscapeHDSD3DLabel]</value>
        <value>$INFO[ListItem.Property(UnWatchedEpisodes),$LOCALIZE[41311],]</value>
    </variable>
    
    <variable name="ThumbnailViewDetailInfo">
        <value condition="Container.Content(episodes) + !IsEmpty(ListItem.Overlay)">$INFO[ListItem.Premiered]$INFO[ListItem.Rating, ★ ,]      </value>
        <value condition="Container.Content(episodes) + IsEmpty(ListItem.Overlay)">$INFO[ListItem.Premiered]$INFO[ListItem.Rating, ★ ,]</value>
        <value condition="!Container.Content(episodes) + !IsEmpty(ListItem.Overlay)">$INFO[ListItem.Label2]$INFO[ListItem.Rating, ★ ,]      </value>
        <value>$INFO[ListItem.Label2]$INFO[ListItem.Rating, ★ ,]</value>
    </variable>
    
    <variable name="InfoListInfo">
        <value condition="Container.Content(Movies)">$INFO[Container(52).ListItem.Duration,, $LOCALIZE[12391]]</value>
        <value>$INFO[Container(52).ListItem.Studio]</value>
    </variable>
    
    <variable name="InfoListSubInfo">
        <value condition="Container.Content(Episodes)">$INFO[Container(52).ListItem.Date,$LOCALIZE[41805]: ,]</value>
        <value>$INFO[Container(52).ListItem.Genre]</value>
    </variable>
    
    <variable name="CastLabel">
        <value condition="Container.Content(musicvideos)">$LOCALIZE[133]</value>
        <value>$LOCALIZE[41316]</value>
    </variable>
    
    <variable name="VideoInfoTitleLabel">
        <value condition="!IsEmpty(ListItem.TagLine)">$INFO[ListItem.TagLine]</value>
        <value>$INFO[ListItem.Title]</value>
    </variable>
    
    <!-- Other -->
    <variable name="TVTimerRadioButtonTexture">
        <value condition="!StringCompare(ListItem.Comment,$LOCALIZE[305]) + !IsEmpty(ListItem.ChannelName)">buttons/radio/radio-button-nf.png</value>
        <value condition="StringCompare(ListItem.Comment,$LOCALIZE[305]) + !IsEmpty(ListItem.ChannelName)">buttons/radio/radio-button-fo.png</value>
    </variable>
    
    <variable name="TVNumItemsLabel">
        <value condition="IntegerGreaterThan(Container.NumItems,0) + !IntegerGreaterThan(Container.NumItems,1)">$INFO[Container.NumItems,, $LOCALIZE[41822]]</value>
        <value condition="IntegerGreaterThan(Container.NumItems,0)">$INFO[Container.NumItems,, $LOCALIZE[41817]]</value>
    </variable>
     <!-- New and Watched Labels -->
        <!-- New and Watched Labels -->
    <include name="overlay.visibility">
        <texture>$INFO[ListItem.Overlay,overlays/aeon/,]</texture>
        <visible>[SubString(ListItem.Overlay,OverlayWatched.png)] | [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
    </include>
	<include name="overlay.visibility2">
        <texture>$INFO[ListItem.Overlay,overlays/OverlayWatched.png/,]</texture>
        <visible>[SubString(ListItem.Overlay,OverlayWatched.png)] | [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
    </include>
    <include name="overlay.diffuse">
        <visible>[SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
		<colordiffuse>7fff00ff</colordiffuse>
	</include>
	<include name="infotags.anim">
		<include>infotags.animation</include>
		<visible>[[Container.Content(tvshows) | Container.Content(movies) | Container.Content(episodes) | Container.Content(seasons) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs)] + !Skin.HasSetting(hide.infotags)] | Window.IsVisible(movieinformation)</visible>
	</include>
	<include name="infotags.movie.anim">
		<include>infotags.animation</include>
		<visible>[[Container.Content(tvshows) | Container.Content(movies) | Container.Content(episodes) | Container.Content(seasons)] + !Skin.HasSetting(hide.infotags)] | Window.IsVisible(movieinformation)</visible>
	</include>
	<include name="infotags.music.anim">
		<include>infotags.animation</include>
		<visible>[[Container.Content(artists) | Container.Content(albums) | Container.Content(songs)] + !Skin.HasSetting(hide.infotags)] | Window.IsVisible(movieinformation)</visible>
	</include>
	<!-- CLEAR LOGO AND LEFT HAND INFO TAGS -->
    <include name="CommonClearLogoDetails">
    	<control type="group">
    		<posx>0</posx>
			<include>CommonClearLogoRight</include>
			<control type="group">
				<control type="group">
					<posx>1075</posx>
					<posy>172r</posy>
					<animation effect="slide" end="-35" time="300" tween="sine" easing="inout" condition="Window.IsActive(mutebug)">Conditional</animation>
					<animation effect="slide" end="-30" time="300" tween="sine" easing="inout" condition="PVR.IsRecording | PVR.HasTimer">Conditional</animation>
					<visible>!Skin.HasSetting(hide.clearlogos)</visible>
					<control type="image">
						<posx>1</posx>
						<posy>26</posy>
						<width>320</width>
						<height>124</height>
						<aspectratio align="center" aligny="bottom">keep</aspectratio>
						<texture>$VAR[ClearLogosVar]</texture>
						<colordiffuse>Mod_Tags_Logo_Shadow</colordiffuse>
						<include>infotags.movie.anim</include>
					</control>
					<control type="image">
						<posx>0</posx>
						<posy>25</posy>
						<width>320</width>
						<height>124</height>
						<aspectratio align="center" aligny="bottom">keep</aspectratio>
						<texture>$VAR[ClearLogosVar]</texture>
						<include>infotags.movie.anim</include>
					</control>
					<control type="label">
						<posx>-30</posx>
						<posy>55</posy>
						<width>480</width>
						<height>72</height>
						<label>$VAR[BottomClearLogoText]</label>
						<font>Font-Alaska-S38-BL</font>
						<textcolor>Mod_Tags</textcolor>
						<scroll>false</scroll>
						<align>center</align>
						<aligny>center</aligny>
						<wrapmultiline>true</wrapmultiline>
						<include>infotags.movie.anim</include>
					</control>
				</control>
				<control type="group">
					<posx>100</posx>
					<posy>950</posy>
					<control type="group">
						<animation effect="fade" start="100" end="0" time="0" condition="![Container.Content(Episodes) | Container.Content(Movies)]">Conditional</animation>
						<posx>210</posx>
						<control type="image">
							<posx>0</posx>
							<posy>22</posy>
							<width>100</width>
							<height>52</height>
							<aspectratio>stretch</aspectratio>
							<texture border="20,10,20,10">aeonflags/posters/left.png</texture>
							<colordiffuse>Mod_Tags</colordiffuse>
							<include>infotags.movie.anim</include>
						</control>
						<control type="image">
							<posx>7</posx>
							<posy>22</posy>
							<width>92</width>
							<height>52</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture fallback="aeonflags/studios/default-studio.png">$VAR[AeonFlagHDSD]</texture>
							<colordiffuse>Mod_Tags_Alt</colordiffuse>
							<visible>!substring(ListItem.Path,videodb://1/7,left)</visible>
							<include>infotags.movie.anim</include>
						</control>
						<control type="image">
							<posx>13</posx>
							<posy>28</posy>
							<width>82</width>
							<height>38</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture>flags/other/set-info.png</texture>
							<colordiffuse>Mod_Tags_Alt</colordiffuse>
							<visible>substring(ListItem.Path,videodb://1/7,left)</visible>
							<include>infotags.movie.anim</include>
						</control>
						<control type="image">
							<posx>100</posx>
							<posy>22</posy>
							<width>245</width>
							<height>52</height>
							<aspectratio>stretch</aspectratio>
							<texture border="20,10,20,10">aeonflags/posters/right.png</texture>
							<colordiffuse>Mod_Tags</colordiffuse>
							<include>infotags.movie.anim</include>
						</control>
						<control type="image">
							<posx>128</posx>
							<posy>22</posy>
							<width>90</width>
							<height>52</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture>$VAR[AeonFlagVideoCodec]</texture>
							<colordiffuse>Mod_Tags</colordiffuse>
							<visible>!substring(ListItem.Path,videodb://1/7,left)</visible>
							<include>infotags.movie.anim</include>
						</control>
						<control type="image">
							<posx>228</posx>
							<posy>22</posy>
							<width>90</width>
							<height>52</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture>$VAR[AeonFlagAudioCodec]</texture>
							<colordiffuse>Mod_Tags</colordiffuse>
							<visible>!substring(ListItem.Path,videodb://1/7,left)</visible>
							<include>infotags.movie.anim</include>
						</control>
<!--Missing Label Needs looking at!!-->						
						<control type="label">
							<posx>108</posx>
							<posy>22</posy>
							<width>220</width>
							<height>52</height>
							<label>$LOCALIZE[20457]</label>
							<font>Font-Alaska-S25-BL</font>
							<textcolor>Mod_Tags</textcolor>
							<scroll>false</scroll>
							<align>center</align>
							<wrapmultiline>false</wrapmultiline>
							<visible>substring(ListItem.Path,videodb://1/7,left)</visible>
							<include>infotags.movie.anim</include>
						</control>
					</control>
					<!-- RATING AND STUDIO -->
					<control type="group">
						<control type="image">
							<posx>0</posx>
							<posy>22</posy>
							<width>100</width>
							<height>52</height>
							<aspectratio>stretch</aspectratio>
							<texture border="20,10,20,10">aeonflags/posters/left.png</texture>
							<colordiffuse>Mod_Tags</colordiffuse>
							<include>infotags.movie.anim</include>
						</control>
						<control type="image">
							<posx>7</posx>
							<posy>22</posy>
							<width>92</width>
							<height>52</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture fallback="aeonflags/studios/default-studio.png">$VAR[AeonFlagStudio]</texture>
							<colordiffuse>Mod_Tags_Alt</colordiffuse>
							<include>infotags.movie.anim</include>
						</control>
						<control type="image">
							<posx>100</posx>
							<posy>22</posy>
							<width>100</width>
							<height>52</height>
							<aspectratio>stretch</aspectratio>
							<texture border="20,10,20,10">aeonflags/posters/right.png</texture>
							<colordiffuse>Mod_Tags</colordiffuse>
							<include>infotags.movie.anim</include>
						</control>
						<control type="image">
							<posx>100</posx>
							<posy>22</posy>
							<width>94</width>
							<height>52</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture>$VAR[AeonFlagRating]</texture>
							<colordiffuse>Mod_Tags</colordiffuse>
							<include>infotags.movie.anim</include>
						</control>
					</control>
					<!-- TV GENRES -->
					<control type="group">
						<visible>![Container.Content(Episodes) | Container.Content(Movies)]</visible>
						<control type="image">
							<posx>210</posx>
							<posy>22</posy>
							<width>100</width>
							<height>52</height>
							<aspectratio>stretch</aspectratio>
							<texture border="20,10,20,10">aeonflags/posters/left.png</texture>
							<colordiffuse>Mod_Tags</colordiffuse>
							<include>infotags.movie.anim</include>
						</control>
						<control type="label">
							<posx>220</posx>
							<posy>34</posy>
							<width>85</width>
							<label>$LOCALIZE[42260]</label>
							<font>Font-Alaska-S25-BL</font>
							<textcolor>Mod_Tags_Alt</textcolor>
							<scroll>false</scroll>
							<align>center</align>
							<wrapmultiline>false</wrapmultiline>
							<include>infotags.movie.anim</include>
						</control>
						<control type="image">
							<posx>310</posx>
							<posy>22</posy>
							<width>245</width>
							<height>52</height>
							<aspectratio>stretch</aspectratio>
							<texture border="20,10,20,10">aeonflags/posters/right.png</texture>
							<colordiffuse>Mod_Tags</colordiffuse>
							<include>infotags.movie.anim</include>
						</control>
						<control type="label">
							<posx>328</posx>
							<posy>34</posy>
							<width>205</width>
							<label>$INFO[ListItem.Genre]</label>
							<font>Font-Alaska-S25-BL</font>
							<textcolor>Mod_Tags</textcolor>
							<scroll>false</scroll>
							<align>center</align>
							<wrapmultiline>false</wrapmultiline>
							<include>infotags.movie.anim</include>
						</control>
					</control>
				</control>
			</control>
        </control>
    </include>
		<!-- STAR RATING AND YEAR -->   
    <include name="CommonClearLogoRight">
		<control type="group">
			<posx>665</posx>
			<control type="group">
				<animation effect="slide" start="0" end="30" time="300" tween="sine" easing="inout" condition="true">Conditional</animation>
				<control type="image">
					<posx>116</posx>
					<posy>966</posy>
					<width>150</width>
					<height>64</height>
					<aspectratio align="right" aligny="top">keep</aspectratio>
					<texture fallback="aeonflags/music/rating/rating0.png">$INFO[ListItem.StarRating,aeonflags/music/rating/,]</texture>
					<colordiffuse>Mod_Tags</colordiffuse>
					<include>infotags.anim</include>
				</control>
				<control type="image">
					<posx>122</posx>
					<posy>972</posy>
					<width>141</width>
					<height>52</height>
					<aspectratio>stretch</aspectratio>
					<texture>aeonflags/posters/imdb.png</texture>
					<colordiffuse>Mod_Tags</colordiffuse>
					<include>infotags.anim</include>
				</control>
			</control>
			<control type="image">
				<posx>0</posx>
				<posy>972</posy>
				<width>141</width>
				<height>52</height>
				<aspectratio>stretch</aspectratio>
				<texture>aeonflags/posters/top250.png</texture>
				<colordiffuse>Mod_Tags</colordiffuse>
				<include>infotags.anim</include>
			</control>
			<control type="label">
				<posx>54</posx>
				<posy>984</posy>
				<width>75</width>
				<label>$VAR[SeasonalYear]</label>
				<font>Font-Alaska-S25-BL</font>
				<textcolor>Mod_Tags</textcolor>
				<scroll>false</scroll>
				<align>center</align>
				<wrapmultiline>false</wrapmultiline>
				<include>infotags.anim</include>
			</control>
		</control>
    </include>
	    <variable name="SeasonalYear">
        <value condition="Container.Content(episodes) + !IsEmpty(ListItem.Season)">S$INFO[ListItem.Season]</value>
        <value condition="Container.Content(seasons) + !IsEmpty(ListItem.Season)">S$INFO[ListItem.Season]</value>
        <value condition="Container.Content(seasons) + IsEmpty(ListItem.Season)">Extras</value>
        <value condition="Container.Content(songs) + !IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration]</value>
        <value condition="![Container.Content(songs) | Container.Content(seasons)] + !IsEmpty(ListItem.Year)">$INFO[ListItem.Year]</value>
        <value>N/A</value>
    </variable>
	<variable name="AeonFlagRating">
        <value condition="substring(ListItem.MPAA,Rated G) | substring(ListItem.MPAA,USA:G)">aeonflags/rating/MPAA_G_Certificate_US.png</value>
        <value condition="[substring(ListItem.MPAA,Rated PG) + !substring(ListItem.MPAA,13)] | substring(ListItem.MPAA,USA:PG)">aeonflags/rating/MPAA_PG_Certificate_US.png</value>
        <value condition="[substring(ListItem.MPAA,PG-13) | substring(ListItem.MPAA,USA:PG-13)] + [!substring(ListItem.MPAA,USA:R) + !substring(ListItem.MPAA,rated R)]">aeonflags/rating/MPAA_PG-13_Certificate_US.png</value>
        <value condition="substring(ListItem.MPAA,Rated R) | substring(ListItem.MPAA,USA:R)">aeonflags/rating/MPAA_R_Certificate_US.png</value>
        <value condition="substring(ListItem.MPAA, NC-17) | substring(ListItem.MPAA,USA:NC-17)">aeonflags/rating/MPAA_NC-17_Certificate_US.png</value>
        <value condition="substring(listitem.mpaa,TV-Y) + ![substring(listitem.mpaa,TV-Y7) | substring(listitem.mpaa,TV-Y7-FV)]">aeonflags/rating/tv-y.png</value>
        <value condition="substring(listitem.mpaa,TV-Y7) | substring(listitem.mpaa,TV-Y7-FV)">aeonflags/rating/tv-y7.png</value>
        <value condition="substring(listitem.mpaa,TV-G)">aeonflags/rating/TV-G_Certificate_US.png</value>
        <value condition="substring(listitem.mpaa,TV-PG)">aeonflags/rating/TV-PG_Certificate_US.png</value>
        <value condition="substring(listitem.mpaa,TV-14)">aeonflags/rating/TV-14_Certificate_US.png</value>
        <value condition="substring(listitem.mpaa,TV-MA)">aeonflags/rating/TV-MA_Certificate_US.png</value>
        <value>aeonflags/rating/MPAA_NR_Certificate_US.png</value>
    </variable>
	<variable name="AeonFlagStudio">
        <value condition="!IsEmpty(ListItem.Studio)">$INFO[ListItem.Studio,aeonflags/studios/,.png]</value>
        <value>aeonflags/studios/default-studio.png</value>
    </variable>
	    <variable name="AeonFlagAudioCodec">
    	<value condition="!IsEmpty(ListItem.Property(Album_Label)) + Container.Content(albums)">$INFO[ListItem.Property(Album_Label),aeonflags/music/recordlabel/,.png]</value>
        <value condition="!IsEmpty(ListItem.AudioCodec) + [Container.Content(episodes) | Container.Content(movies)]">$INFO[ListItem.AudioCodec,aeonflags/audio/,.png]</value>
        <value condition="!IsEmpty(ListItem.FileExtension) + [Container.Content(songs)]">$INFO[ListItem.FileExtension,aeonflags/audio/,.png]</value>
        <value>aeonflags/audio/defaultscreen.png</value>
    </variable>
	    <variable name="AeonFlagVideoCodec">
        <value condition="!IsEmpty(ListItem.VideoCodec) + [Container.Content(episodes) | Container.Content(movies)]">$INFO[ListItem.VideoCodec,aeonflags/source/,.png]</value>
        <value>aeonflags/source/default.png</value>
    </variable>
	    <variable name="AeonFlagHDSD">
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,1079)">aeonflags/resolution/1080.png</value>
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,719)">aeonflags/resolution/720.png</value>
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,575)">aeonflags/resolution/576.png</value>
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,539)">aeonflags/resolution/540.png</value>
        <value>aeonflags/resolution/480.png</value>
    </variable>
	    <variable name="BottomClearLogoText">
        <value condition="Container.Content(Seasons) + IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.TVShowTitle]</value>
        <value condition="IsEmpty(ListItem.Art(clearlogo)) + IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Label]</value>
    </variable>
    
    <variable name="MusicBottomClearLogoText">
        <value condition="Container.Content(Songs) + StringCompare(Control.GetLabel(89456),blank.png)">$INFO[ListItem.Artist]</value>
        <value condition="Container.Content(Albums) + StringCompare(Control.GetLabel(89456),blank.png)">$INFO[ListItem.Artist]</value>
        <value condition="Container.Content(Artists) + StringCompare(Control.GetLabel(89456),blank.png)">$INFO[ListItem.Artist]</value>
    </variable>
	    <variable name="ClearLogosVar">
        <value condition="!IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
    </variable>
	<variable name="PlexBanner">
        <value condition="!IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/banner.png]</value>
    </variable>
	<variable name="ListInfoLandscapeVar">
        <value condition="Container.Content(episodes)">$INFO[ListItem.Thumb]</value>
        <value condition="!IsEmpty(ListItem.Art(landscape)) + Skin.HasSetting(PreferLandscapeArt)">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="IsEmpty(ListItem.Thumb)">$INFO[ListItem.ActualIcon,views/fallbacks/,/medium.png]</value>
        <value>$INFO[ListItem.Thumb]</value>
    </variable>
	<include name="WallFullAnimation">
		<animation type="WindowOpen" reversible="false">
			<effect type="zoom" start="150" end="100" time="400" center="640,360" tween="sine" easing="out" />
			<effect type="fade" start="0" end="100" time="400" />
		</animation>
		<animation type="Visible" reversible="false">
			<effect type="fade" start="0" end="100" time="400" />
			<effect type="zoom" start="150" end="100" time="400" center="640,360" tween="sine" easing="out" />
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="zoom" start="100" end="130" time="430" center="640,360" tween="sine" easing="inout" />
			<effect type="fade" start="100" end="0" time="430" />
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="zoom" start="100" end="130" time="430" center="640,360" tween="sine" easing="inout" />
			<effect type="fade" start="100" end="0" time="430" />
		</animation>
	</include>
</includes>
